{"version":3,"sources":["../../api/test/test.js"],"names":["chai","require","chaiHttp","app","use","expect","describe","it","done","book","title","price","description","request","post","set","send","end","err","res","status","to","equal","body","data","include","id","get","should","have","property","bookId","eql","updatedBook","put","delete"],"mappings":"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","sourcesContent":["const chai = require('chai');\nconst chaiHttp = require('chai-http');\nrequire('chai/register-should');\nconst app = require('../index');\n\nchai.use(chaiHttp);\nconst { expect } = chai;\n\ndescribe('Testing the book endpoints:', () => {\n  it('It should create a book', (done) => {\n    const book = {\n      title: 'Introduction to Python',\n      price: 'Rp 300.000',\n      description: 'This is the introduction to python'\n    }\n\n    chai.request(app)\n      .post('/api/v1/books')\n      .set('Accept', 'application/json')\n      .send(book)\n      .end((err, res) => {\n        expect(res.status).to.equal(201);\n        expect(res.body.data).to.include({\n          id: 1,\n          title: book.title,\n          price: book.price,\n          description: book.description\n        });\n\n        done();\n\n      });\n  });\n\n  it('It should not create a book with incomplete parameters', (done) => {\n    const book = {\n      price: 'Rp 300.000',\n      description: 'This is the introduction to Python'\n    }\n\n    chai.request(app)\n      .post('/api/v1/books')\n      .set('Accept', 'application/json')\n      .send(book)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        done();\n      });\n  });\n\n  it('It should get all books', (done) => {\n    chai.request(app)\n      .get('/api/v1/books')\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data[0].should.have.property('id');\n        res.body.data[0].should.have.property('title');\n        res.body.data[0].should.have.property('price');\n        res.body.data[0].should.have.property('description');\n\n        done();\n      });\n  });\n\n  it('It should get a particular book', (done) => {\n    const bookId = 1;\n\n    chai.request(app)\n      .get(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data.should.have.property('id');\n        res.body.data.should.have.property('title');\n        res.body.data.should.have.property('price');\n        res.body.data.should.have.property('description');\n\n        done();\n      });\n  });\n\n  it('It should not get a particular book with invalid id', (done) => {\n    const bookId = 8888;\n\n    chai.request(app)\n      .get(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n                            .eql(`Cannot find book with the id ${bookId}`);\n\n        done();\n      });\n  });\n\n  it('It should not get a particular book with non-numeric id', (done) => {\n    const bookId = 'aaa';\n\n    chai.request(app)\n      .get(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n                            .eql('Please input a valid numeric value');\n        \n        done();\n      });\n  });\n\n  it('It should update a book', (done) => {\n    const bookId = 1;\n    const updatedBook = {\n      id: bookId,\n      title: '[Updated] Introduction to Python',\n      price: 'Rp 350.000',\n      description: 'We have updated the price'\n    }\n\n    chai.request(app)\n      .put(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .send(updatedBook)\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data.id).equal(updatedBook.id);\n        expect(res.body.data.title).equal(updatedBook.title);\n        expect(res.body.data.price).equal(updatedBook.price);\n        expect(res.body.data.description).equal(updatedBook.description);\n\n        done();\n      });\n  });\n\n  it('It should not update a book with invalid id', (done) => {\n    const bookId = 9999;\n    const updatedBook = {\n      id: bookId,\n      title: '[Updated] Introduction to Python',\n      price: 'Rp 350.000',\n      description: 'We have updated the price'\n    }\n\n    chai.request(app)\n      .put(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .send(updatedBook)\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n                            .eql(`Cannot find book with the id: ${bookId}`);\n\n        done();\n      });\n  });\n\n  it('It should not update a book with non-numeric id value', (done) => {\n    const bookId = 'ggg';\n    const updatedBook = {\n      id: bookId,\n      title: '[Updated] Introduction to Python',\n      price: 'Rp 350.000',\n      description: 'We have updated the price'\n    }\n\n    chai.request(app)\n      .put(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .send(updatedBook)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n                            .eql('Please input a valid numeric value');\n\n        done();\n      });\n  });\n\n  it('It should delete a book', (done) => {\n    const bookId = 1;\n    chai.request(app)\n      .delete(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data).to.include({});\n      \n        done();\n      });\n  });\n\n  it('It should not delete a book with invalid id', (done) => {\n    const bookId = 777;\n    \n    chai.request(app)\n      .delete(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n                      .eql(`Book with id ${bookId} cannot be found`);\n\n        done();\n      });\n  });\n\n  it('It should not delete a book with non-numeric id', (done) => {\n    const bookId = 'bbb';\n    \n    chai.request(app)\n      .delete(`/api/v1/books/${bookId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n                      .eql('Please input a valid numeric value');\n\n        done();\n      });\n  });\n});"],"file":"test.js"}